@charset "UTF-8";
@mixin checkbox-list {
  label {
    cursor: pointer;
  }
  $size: 13px;
  input {
    @include checkbox($size)
  }
  @for $i from 1 through length($textbox-size-name) {
    $szselector: create-selector(nth($textbox-size-name, $i), $checklist-prefix);
    &#{$szselector} {
      @if (length($textbox-size) >= $i) {
        line-height: nth($textbox-size, $i);
      }
      @if (length($textbox-font-size) >= $i) {
        font-size: nth($textbox-font-size, $i);
      }
      label {
        @if (length($textbox-padding-rl) >= $i) {
          margin-right: nth($textbox-padding-rl, $i);
        }
      }
      input {
        @if (length($textbox-size) >= $i) {
          @include place-middle($size, nth($textbox-size, $i));
        }
        @if (length($textbox-padding-rl) >= $i) {
          margin-right: nth($textbox-padding-rl, $i);
        }
      }
    }
  }
}
@mixin form-vertical {
  table {
    width: 100%;
  }
  th {
    text-align: right;
    font-weight: lighter;
  }
  th, td {
    vertical-align: top;
    @include box-sizing(content-box);
  }

  input, select {
    vertical-align: top;
  }

  @for $i from 1 through length($textbox-size-name) {
    $szselector: create-selector(nth($textbox-size-name, $i), $form-vertical-prefix);
    $size: nth($textbox-size, $i);
    &#{$szselector} {
      font-size: nth($textbox-font-size, $i);
    }
    &#{$szselector} th {
      white-space: nowrap;
      @if (length($form-vertical-label-padding-r) >= $i) {
        padding-right: nth($form-vertical-label-padding-r, $i);
      }
      @if (length($form-vertical-label-width) >= $i) {
        width: nth($form-vertical-label-width, $i);
      }
      @if (length($form-vertical-interval) >= $i) {
        min-height: nth($form-vertical-interval, $i) + $size;
        height: nth($form-vertical-interval, $i) + $size;
      }
    }
    &#{$szselector} th, &#{$szselector} td {
      line-height: $size;
    }
    &#{$szselector} td {
      @if (length($form-vertical-interval) >= $i) {
        padding-bottom: nth($form-vertical-interval, $i);
      }
    }
    &#{$szselector} .form-menu {
      @if (length($form-vertical-menu-margin-t) >= $i) {
        margin-top: nth($form-vertical-menu-margin-t, $i);
      }
      @if (length($form-vertical-label-width) >= $i or length($form-vertical-label-padding-r) >= $i) {
        margin-left: nth-or-first($form-vertical-label-width, $i) + nth-or-first($form-vertical-label-padding-r, $i)
      }
    }
  }
}

@mixin element-group {
  a, input, output, button, select {
    border-right-width: 0;
    border-radius: 0;
    margin: {
      left: 0;
      right: 0;
    }
    box-shadow: none;
  }
  a, button{
    @for $i from 1 through length($btn-size-name) {
      &#{create-selector(nth($btn-size-name, $i), $btn-prefix)} {
        @if (length($btn-radius-size) >= $i) {
          &.first-item {
            border-radius: nth($btn-radius-size, $i) 0 0 nth($btn-radius-size, $i);
          }
          &.last-item {
            border-radius: 0 nth($btn-radius-size, $i) nth($btn-radius-size, $i) 0;
          }
        }
        @if (length($btn-bd-size) >= $i) {
          &.last-item {
            border-right-width: nth($btn-bd-size, $i);
          }
        }
      }

    }
  }
  input, output, select {

    @for $i from 1 through length($textbox-size-name) {
      &#{create-selector(nth($textbox-size-name, $i), $textbox-prefix)} {
        @if (length($textbox-radius-size) >= $i) {
          &.first-item {
            border-radius: nth($textbox-radius-size, $i) 0 0 nth($textbox-radius-size, $i);
          }
          &.last-item {
            border-radius: 0 nth($textbox-radius-size, $i) nth($textbox-radius-size, $i) 0;
          }
        }
        @if (length($textbox-bd-size) >= $i) {
          &.last-item {
            border-right-width: nth($textbox-bd-size, $i);
          }
        }
      }

    }

  }
}
@mixin add-shadow-to-element-group {
  a, button {
    box-shadow: 0 1px 1px 0 rgba(0,0,0,.20);
  }
}
@mixin element-menu($menu-on-right: false) {
  @if ($menu-on-right == true) {
    margin-right: -1 * $element-menu-interval;
    text-align: right;
  } @else {
    text-align: left;
  }
  input, a, button, select {
    margin-right: $element-menu-interval;
  }

}
