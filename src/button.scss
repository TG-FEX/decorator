
@mixin adjust-button-height (){
  @include box-sizing(border-box);
  overflow: visible;

  @for $i from 1 through length($btn-size-name) {
    $szselector: create-selector(nth($btn-size-name, $i), $btn-prefix);
    &#{$szselector} {
      @include with-button-ajustment(nth($btn-size, $i), nth($btn-font-size, $i));
    }
  }
}

@mixin button-state ($i) {
  background-color: nth($btn-bg-color, $i);
  border-color: nth($btn-bd-color, $i);
  color: nth($btn-font-color, $i);
  @for $j from 1 through length($btn-ustate-name) {
    $uselector: create-u-selector(nth($btn-ustate-name, $j));
    &#{$uselector} {
      background-position: vertical-splites($j - 1 + ($i - 1) * length($btn-ustate-name), $btn-grid-size);
      color: nth($btn-font-color, $i);
    }
  }
}
@mixin button-state-mapping ($name) {
  $i: index($btn-state-name, $name);
  @include button-index-state($i)
}
@mixin button-size ($i) {
  font-size: nth($btn-font-size, $i);
  $l: nth($btn-size, $i) - nth($btn-line-height, $i) - $btn-bd-size * 2;
  $pd-t: floor($l / 2);
  $pd-b: $l - $pd-t;
  @include single-line-height(nth($btn-line-height, $i));
  padding: {
    top: $pd-t;
    bottom: $pd-b;
    left: nth($btn-padding-rl, $i);
    right: nth($btn-padding-rl, $i);
  }
  background-image: nth($btn-bg-url, $i);
}

// ������ť��ʽ
@mixin button($width: auto) {

  outline: none;
  overflow-y: hidden;
  box-shadow: 0 1px 1px 0 rgba(0,0,0,.20);
  text-align: center;
  border: $btn-bd-size solid;
  border-radius: $btn-radius-size;

  @include button-like();
  @if ($width != 'auto') {
    width: adjust-box-size($width, $btn-bd-size*2);
  }


  @for $i from 1 through length($btn-state-name) {
    $selector: create-selector(nth($btn-state-name, $i), $btn-prefix);
    &#{$selector} {
      @include button-state($i);
    }
  }

  @for $i from 1 through length($btn-size-name) {
    $szselector: create-selector(nth($btn-size-name, $i), $btn-prefix);
    &#{$szselector} {
      @include button-index-size($i);
    }
  }


  &#{create-selector('lg', $btn-prefix)}, &#{create-selector('xlg', $btn-prefix)} {
    font-weight: bold;
  }


  &:hover {
    cursor: pointer;
    text-decoration: none;
  }

  &:active {
    box-shadow: none;
  }

  &:focus {
    outline: none;
    @include grow;
  }


  &[disabled], &.disabled {
    @include disabled;
  }


  &.block {
    display: block;
    padding: {
      left: 0;
      right: 0;
    }
  }

}
